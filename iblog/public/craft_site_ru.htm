<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<style>
div.background {
    background: url(img/bnd_site.jpg) repeat;
    border: 2px solid black;
}

div.transbox {
    margin: 30px;
    background-color: #ffffff;
    border: 1px solid black;
    opacity: 0.93;
    filter: alpha(opacity=60); /* For IE8 and earlier */	
}

div.transbox p {    
    margin: 5%;
    font-weight: bold;
    color: #000000;	
} 

</style>
</head>
<body>

<div class="background">
  <div class="transbox">    
	<a href="http://www.izutov.com/">Вернуться в блог</a>
	<h2>Как я докатился до laravel.</h2>
<div class>Все началось с задумки создания своего сайта. Логично было сделать блог, никакой коммерческой цели не преследовалось. Но чтобы это было полезно, решил делать на базе какого-нибудь MVC 
фреймворка. Так как интересен Java стэк, начал с простых фреймворков и первый, который сильно все расхваливали, был <a  
href="https://www.playframework.com/">Play!</a> Вроде как простой, с поддержкой динамического скаффолдинга и другими  
плюшками. По факту же, на java что-либо серьезное написать практически невозможно, и большинство интересных примеров для  
проектов на Scala. Т.е. в данном случае поддержка java - это лишь тизер. Все серьезное можно делать только в проектах на  
Scala, сообщество не такое огромное и ответы на сложные вопросы не всегда по первой ссылке в гугле найдешь. В целом,  
много всего непонятного (для меня в частности) Хороший обзор по фреймоворку можно прочесть <a  
href="http://habrahabr.ru/post/173211/">здесь</a>. Один из главных выводов в статье (цитата) <i>Чтобы использовать Play  
2.1 по полной, надо хорошо знать Scala.</i> </br>
После нескольких подходов к штанге бросил его и перешел к <a href="https://grails.org/" class="underline">Grails</a>. Grails сделан на базе  
Spring и также как Play! рассчитан на rapid development (динамический скаффолдинг, создание контролеров, моделей и вьюх  
одной командой, юнит тесты и т.д.) И даже нашел толковую книгу по фреймворку <a  
href="https://www.manning.com/books/grails-in-action" class="underline">Grails in Action</a>. Начал делать пример из книги(первый простой пример <a href="https://github.com/rituzy/qotd" class="underline">доступен на гите</a>) и на середине  
книги столкнулся с тем, что пример не рабочий - и тут начались трудности: в момент написания книги версия была более  
старая, а в новой версии какие-то примочки не работают. Т.е. надо лезть в движок и ковырять классы ядра, чтобы  
добавить/удалить объекты. На странице поддержки книги много вопросов: я наткнулся на то, что плагины для фреймворка не  
работают с новой версией. После нескольких таких моментов, я бросил это занятие и даже книгу не дочитал. В добавок ко  
всему, сообщество сократилось сильно и в целом, фреймворк практически заброшен.</br>
В случае с Java оставался <a href="http://spring.io/" class="underline">Spring</a> или другие известные фреймворки но уже с поддержкой  
других языков: Python(<a href="https://www.djangoproject.com/" class="underline">Django</a>) или PHP(<a  
href="http://laravel.com/" class="underline">Laravel</a>). Spring я просто испугался, т.к. надо еще море всего прочитать, чтобы сделать  
что-то маломальское. Т.к. PHP язык шаблонов, разработанный для web, остановился на нем, т.е. на Laravel.
<h2>Laravel.</h2>
Большое русское <a href="https://laravel.ru/" class="underline">сообщество</a>, язык PHP очень прост и вся исчерпывающая документация легко  
находится онлайн. Мне в нем нравится простота, наличие ответов на большинство вопросов, прозрачная схема. Здесь также  
можно настроить юнит тесты, поддержка подключений ко всем распространенным БД(есть возможность работать без web server'a,  
у фреймворка есть свой "портативный" для разработки) Такого джедайства как динамический скаффолдинг нет, да и не надо 
(руками делается все просто) Очень понятно и удобно описываются ошибки, легко гуглятся из-за большого сообщества. Книг  
уже много написано (если начинаете, сразу берите по последней версии фреймворка)
<h2>Блог.</h2>
По времени, создание движка блога с разными моими хотелками заняло менее, чем попытки с первыми двумя фреймворками. Любой  
может установить фреймворк верси 4.1, забрать движок с моего репозитория, настроить конфиг и после создания БД и  
подключения к ней одной командой, создать пустую БД для движка после чего можно наслаждаться своим сайтом.(понадобится  
веб сервер или команда php artisan serve) Делал я его не с самого нуля, исходный вариант был взят <a href="http://www.codeheaps.com/php-programming/creating-blog-using-laravel-4-part-1/" class="underline">здесь</a> ...и получилась каша из топора: вокруг этого примера наросло столько всего, что уже и не углядеть, с чего начиналось.</br>
<b>Особенности: </b>
<ul>
<li> необходимо прочитать требования к серверу (PHP не ниже 5 версии) </li>
<li> сейчас стабильный релиз уже 5 версии, у меня 4.1 (когда начинал, стабильной была 4 версия) Обновление на 5 версию  
займет у вас некорого терпения и времени, но это реально </li>
<li> используются два плагина(зависимости): загрузка картинок на сайт и капча)</li>
<li> придется руками создать роль админа в БД и выдать ее администратору сайта(запросами в БД)</li>
<li> странички поделок сделаны как обычные HTML страницы, т.к. хотелось сверстать просто страницы</li>
<li> практически не использовал Ajax, за исключением 2 мест, где без него было не обойтись</li>
</ul>
<b>Фишки:</b>
<ul>
<li> блог поддерживает рекурсивное создание комментов на комменты (как в ЖЖ)</li>
<li> поддерживается регистрация пользователя через ВКонтакте</li>
<li> фоторгафии на сайте лежат в закрытой от внешнего мира папке и копируются во временную папку на сервере (нельзя взять  
и скачать все фотки разом)</li>
<li> используется полиморфная связь ТЭГов с Постами, Комментами, Фотками и Поделками. Не более одного ТЭГа на сущность.  
Это сделано специально, чтобы не устраивать помойку из ТЭГов и, как следствие, их бесполезность.</li>
<li> поддержка русского и английского языков</li>
<li> используется soft deleting, т.е. записи не удаляются из БД, а помечаются как удаленные</li>
<li> поддерживается текстовый поиск </li>
</ul>

<b>Модели сайта:</b></br>
<img src="img/model.png"></img></br>

Не весь список TODO закрыт, но когда-то надо начинать, а там - продолжим :)</br>

<a href="https://github.com/rituzy/iblog" class="underline">Проект на github</a></br>

  </div>
</div>

</body>
</html>
